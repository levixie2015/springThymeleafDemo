<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<!--  
    如果内网机器报错,请使用下面这种笨办法 
 -->
<!--   
<!DOCTYPE configuration  
        PUBLIC "-//www.mybatis.org//DTD Config 3.0//EN"  
        "E:/bao/tomcat/apache-tomcat-6.0.14/webapps/pmsys/WEB-INF/classes/mybatis/mybatis-3-config.dtd">  
 -->
<configuration>
    <properties>
        <!-- 设置分页插件数据库方言 -->
        <property name="dialect" value="mysql"/>
    </properties>


    <settings>
        <!-- 只设置需要的,其他使用默认值 -->
        <!-- 开启缓存,默认就是开启的,2层开关,需要在Mapper文件中也指定 cache 标签才会真正使用缓存 -->
        <setting name="cacheEnabled" value="true"/>
        <!-- 在null时也调用 setter,适应于返回Map,3.2版本以上可用 -->
        <setting name="callSettersOnNulls" value="true"/>
    </settings>


    <typeHandlers>
        <!--
            当配置package的时候，mybatis会去配置的package扫描TypeHandler
            <package name="com.dy.demo"/>

            handler属性直接配置我们要指定的TypeHandler

            javaType 配置java类型，例如String, 如果配上javaType, 那么指定的typeHandler就只作用于指定的类型

            jdbcType 配置数据库基本数据类型，例如varchar, 如果配上jdbcType, 那么指定的typeHandler就只作用于指定的类型

           也可两者都配置
         -->

        <!-- handler属性直接配置我们要指定的TypeHandler -->
        <!-- <typeHandler  javaType="java.util.Map" handler="com.baosight.cmdty.mybatis.EmptyStringIfNull"/> -->
    </typeHandlers>

    <plugins>
        <!-- 分页拦截器实现 -->
        <!--        <plugin interceptor="com.chemcn.ec.framework.PaginationInterceptor"></plugin>-->
        <!-- com.github.pagehelper为PageHelper类所在包名 -->
        <plugin interceptor="com.github.pagehelper.PageHelper">
            <!-- 4.0.0以后版本可以不设置该参数 -->
            <property name="dialect" value="mysql"/>
            <!-- 该参数默认为false -->
            <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
            <!-- 和startPage中的pageNum效果一样-->
            <property name="offsetAsPageNum" value="false"/>
            <!-- 该参数默认为false -->
            <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
            <property name="rowBoundsWithCount" value="false"/>
            <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
            <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
            <property name="pageSizeZero" value="false"/>
            <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
            <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
            <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
            <property name="reasonable" value="false"/>
            <!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
            <!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
            <!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 -->
            <!-- 不理解该含义的前提下，不要随便复制该配置 -->
            <!--   <property name="params" value="pageNum=start;pageSize=limit;"/>   -->
            <!-- 支持通过Mapper接口参数来传递分页参数 -->
            <property name="supportMethodsArguments" value="false"/>
            <!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
            <property name="returnPageInfo" value="check"/>
        </plugin>
    </plugins>
</configuration>  